/* This is cfunc.mod file auto generated by gen_con_info.py
        Developed by Sumanto Kar at IIT Bombay */

        
        #include <memory>
        #include <verilated.h>
        #include "Vmux21.h"
        #include <stdio.h>
        #include <stdio.h>
        #include <fstream>
        #include <stdlib.h>
        #include <string>
        #include <iostream>
        #include <cstring>
        using namespace std;
        
        extern "C" int temp_i0[1024];
        extern "C" int port_i0;
        extern "C" int temp_i1[1024];
        extern "C" int port_i1;
        extern "C" int temp_sel[1024];
        extern "C" int port_sel;
        extern "C" int temp_y[1024];
        extern "C" int port_y;
        extern "C" int foomux21(int,int);
        
        void int2arrmux21(int  num, int array[], int n)
        {
            for (int i = 0; i < n && num>=0; i++)
            {
                array[n-i-1] = num % 2;
                num /= 2;
                }
        }
        int arr2intmux21(int array[],int n)
        {
            int i,k=0;
            for (i = 0; i < n; i++)
                k = 2 * k + array[i];
            return k;
        }
        
        int foomux21(int init,int count)
        {
            static VerilatedContext* contextp = new VerilatedContext;
            static Vmux21* mux21[1024];
            count--;
            if (init==0)
            {
                mux21[count]=new Vmux21{contextp};
                contextp->traceEverOn(true);
            }
            else
            {
                contextp->timeInc(1);
                printf("=============mux21 : New Iteration===========");
                printf("\nInstance : %d\n",count);
                printf("\nInside foo before eval.....\n");
				printf("i0=%d\n", mux21[count] ->i0);
				printf("i1=%d\n", mux21[count] ->i1);
				printf("sel=%d\n", mux21[count] ->sel);
				printf("y=%d\n", mux21[count] ->y);
				mux21[count]->i0 = arr2intmux21(temp_i0, port_i0);
				mux21[count]->i1 = arr2intmux21(temp_i1, port_i1);
				mux21[count]->sel = arr2intmux21(temp_sel, port_sel);
				mux21[count]->eval();

                printf("\nInside foo after eval.....\n");
				printf("i0=%d\n", mux21[count] ->i0);
				printf("i1=%d\n", mux21[count] ->i1);
				printf("sel=%d\n", mux21[count] ->sel);
				printf("y=%d\n", mux21[count] ->y);
				int2arrmux21(mux21[count] -> y, temp_y, port_y);

            }
            return 0;
        }