/* This is cfunc.mod file auto generated by gen_con_info.py
        Developed by Sumanto Kar at IIT Bombay */

        
        #include <memory>
        #include <verilated.h>
        #include "Vrfasic43_9.h"
        #include <stdio.h>
        #include <stdio.h>
        #include <fstream>
        #include <stdlib.h>
        #include <string>
        #include <iostream>
        #include <cstring>
        using namespace std;
        
        extern "C" int temp_in_Sensor1[1024];
        extern "C" int port_in_Sensor1;
        extern "C" int temp_in_Sensor2[1024];
        extern "C" int port_in_Sensor2;
        extern "C" int temp_in_Sensor3[1024];
        extern "C" int port_in_Sensor3;
        extern "C" int temp_in_Sensor4[1024];
        extern "C" int port_in_Sensor4;
        extern "C" int temp_in_Sensor5[1024];
        extern "C" int port_in_Sensor5;
        extern "C" int temp_in_Global_Clock[1024];
        extern "C" int port_in_Global_Clock;
        extern "C" int temp_in_Clk[1024];
        extern "C" int port_in_Clk;
        extern "C" int temp_in_RST[1024];
        extern "C" int port_in_RST;
        extern "C" int temp_out_Light[1024];
        extern "C" int port_out_Light;
        extern "C" int temp_out_Tx_Serial[1024];
        extern "C" int port_out_Tx_Serial;
        extern "C" int foorfasic43_9(int,int);
        
        void int2arrrfasic43_9(int  num, int array[], int n)
        {
            for (int i = 0; i < n && num>=0; i++)
            {
                array[n-i-1] = num % 2;
                num /= 2;
                }
        }
        int arr2intrfasic43_9(int array[],int n)
        {
            int i,k=0;
            for (i = 0; i < n; i++)
                k = 2 * k + array[i];
            return k;
        }
        
        int foorfasic43_9(int init,int count)
        {
            static VerilatedContext* contextp = new VerilatedContext;
            static Vrfasic43_9* rfasic43_9[1024];
            count--;
            if (init==0)
            {
                rfasic43_9[count]=new Vrfasic43_9{contextp};
                contextp->traceEverOn(true);
            }
            else
            {
                contextp->timeInc(1);
                printf("=============rfasic43_9 : New Iteration===========");
                printf("\nInstance : %d\n",count);
                printf("\nInside foo before eval.....\n");
				printf("in_Sensor1=%d\n", rfasic43_9[count] ->in_Sensor1);
				printf("in_Sensor2=%d\n", rfasic43_9[count] ->in_Sensor2);
				printf("in_Sensor3=%d\n", rfasic43_9[count] ->in_Sensor3);
				printf("in_Sensor4=%d\n", rfasic43_9[count] ->in_Sensor4);
				printf("in_Sensor5=%d\n", rfasic43_9[count] ->in_Sensor5);
				printf("in_Global_Clock=%d\n", rfasic43_9[count] ->in_Global_Clock);
				printf("in_Clk=%d\n", rfasic43_9[count] ->in_Clk);
				printf("in_RST=%d\n", rfasic43_9[count] ->in_RST);
				printf("out_Light=%d\n", rfasic43_9[count] ->out_Light);
				printf("out_Tx_Serial=%d\n", rfasic43_9[count] ->out_Tx_Serial);
				rfasic43_9[count]->in_Sensor1 = arr2intrfasic43_9(temp_in_Sensor1, port_in_Sensor1);
				rfasic43_9[count]->in_Sensor2 = arr2intrfasic43_9(temp_in_Sensor2, port_in_Sensor2);
				rfasic43_9[count]->in_Sensor3 = arr2intrfasic43_9(temp_in_Sensor3, port_in_Sensor3);
				rfasic43_9[count]->in_Sensor4 = arr2intrfasic43_9(temp_in_Sensor4, port_in_Sensor4);
				rfasic43_9[count]->in_Sensor5 = arr2intrfasic43_9(temp_in_Sensor5, port_in_Sensor5);
				rfasic43_9[count]->in_Global_Clock = arr2intrfasic43_9(temp_in_Global_Clock, port_in_Global_Clock);
				rfasic43_9[count]->in_Clk = arr2intrfasic43_9(temp_in_Clk, port_in_Clk);
				rfasic43_9[count]->in_RST = arr2intrfasic43_9(temp_in_RST, port_in_RST);
				rfasic43_9[count]->eval();

                printf("\nInside foo after eval.....\n");
				printf("in_Sensor1=%d\n", rfasic43_9[count] ->in_Sensor1);
				printf("in_Sensor2=%d\n", rfasic43_9[count] ->in_Sensor2);
				printf("in_Sensor3=%d\n", rfasic43_9[count] ->in_Sensor3);
				printf("in_Sensor4=%d\n", rfasic43_9[count] ->in_Sensor4);
				printf("in_Sensor5=%d\n", rfasic43_9[count] ->in_Sensor5);
				printf("in_Global_Clock=%d\n", rfasic43_9[count] ->in_Global_Clock);
				printf("in_Clk=%d\n", rfasic43_9[count] ->in_Clk);
				printf("in_RST=%d\n", rfasic43_9[count] ->in_RST);
				printf("out_Light=%d\n", rfasic43_9[count] ->out_Light);
				printf("out_Tx_Serial=%d\n", rfasic43_9[count] ->out_Tx_Serial);
				int2arrrfasic43_9(rfasic43_9[count] -> out_Light, temp_out_Light, port_out_Light);
				int2arrrfasic43_9(rfasic43_9[count] -> out_Tx_Serial, temp_out_Tx_Serial, port_out_Tx_Serial);

            }
            return 0;
        }